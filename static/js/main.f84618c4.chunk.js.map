{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","React","useState","NONE","sortType","setSortType","isReversed","setIsReversed","curentGoods","goods","visibleGoods","sort","good1","good2","ALPABET","localeCompare","LENGTH","length","reverse","console","log","getReorderedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,mFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA4CE,IAAME,EAAgB,WAC3B,MAAgCC,IAAMC,SAASJ,EAASK,MAAxD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,IAAMC,UAAS,GAAnD,mBAAOI,EAAP,KAAmBC,EAAnB,KAmBMC,EAtDD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,WAENI,EAAY,YAAOD,GA0BzB,OAxBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQT,GACN,KAAKN,EAASgB,QAEZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKf,EAASkB,OAEZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,KAAKnB,EAASK,KAId,QACE,OAAO,MAITG,GACFI,EAAaQ,UAIfC,QAAQC,IAAIhB,EAAUE,GAEfI,EAyBJW,CAAkBtB,EAAiB,CAAEK,WAAUE,eAElD,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,0BAA2BpB,IAAaN,EAASgB,UAErDW,QA7BmB,WACzBpB,EAAYP,EAASgB,UAsBjB,iCAWA,wBACES,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,6BAA8BpB,IAAaN,EAASkB,SAExDS,QApCiB,WACvBpB,EAAYP,EAASkB,SA6BjB,4BAWA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,8BAA+BlB,IAEnCmB,QA3Ca,WACnBlB,GAAeD,IAoCX,sBAUEF,IAAaN,EAASK,OAAuB,IAAfG,IAE9B,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAhDU,WAClBpB,EAAYP,EAASK,MACrBI,GAAc,IA2CR,sBAUJ,6BACE,6BACGC,EAAYkB,KAAI,SAACC,GAAD,OACf,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cCtIpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f84618c4.chunk.js","sourcesContent":["// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n\n        return good1.localeCompare(good2);\n      case SortType.LENGTH:\n\n        return good1.length - good2.length;\n      case SortType.NONE:\n\n        return 0;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = React.useState(SortType.NONE);\n  const [isReversed, setIsReversed] = React.useState(false);\n\n  const handleSortAlphabet = () => {\n    setSortType(SortType.ALPABET);\n  };\n\n  const handleSortLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const handleRevers = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const handleReset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const curentGoods\n   = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'button is-info is-light': sortType !== SortType.ALPABET },\n          )}\n          onClick={handleSortAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'button is-success is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={handleSortLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'button is-warning is-light': !isReversed },\n          )}\n          onClick={handleRevers}\n        >\n          Reverse\n        </button>\n        {(sortType !== SortType.NONE || isReversed !== false)\n        && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {curentGoods.map((good) => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}